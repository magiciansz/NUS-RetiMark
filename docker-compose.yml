version: "3.8"

services:
  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQLDB_DATABASE}
    ports:
      - 3307:3306
    volumes:
      - db:/var/lib/mysql
    platform: linux/x86_64
  flask-server:
    build: ./deeplearning
    # restart: unless-stopped
    ports:
      - 8000:8000
    stdin_open: true
    tty: true
  express-server:
    depends_on:
      - mysqldb
    build: ./backend
    command: bash -c 'while !</dev/tcp/mysqldb/3306; do sleep 1; done; npm start'

    # restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      - DB_HOST=mysqldb
      - DB_USERNAME=${MYSQLDB_USERNAME}
      - DB_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - DB_PORT=3306
      - DB_DATABASE=${MYSQLDB_DATABASE}
      - PORT=8080
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET=${AWS_BUCKET}
      - TOKEN_SECRET=${TOKEN_SECRET}
      - TOKEN_ACCESS_EXPIRATION_MINUTES=${TOKEN_ACCESS_EXPIRATION_MINUTES}
      - TOKEN_REFRESH_EXPIRATION_HOURS=${TOKEN_REFRESH_EXPIRATION_HOURS}
      - NODE_ENV=${EXPRESS_NODE_ENV}
    stdin_open: true
    tty: true
  dashboard:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - express-server
    build: ./dashboard
    # restart: unless-stopped
    ports:
      - 8501:8501
    environment:
      - EXPRESS_ENDPOINT_URL=http://host.docker.internal:8080
      - TZ=Asia/Singapore
    stdin_open: true
    tty: true
  web-app:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - express-server
      - flask-server
    build: ./frontend
    # restart: unless-stopped
    ports:
      - 3000:3000
    environment:
    # please replace host.docker.internal with your own IP. run 'ipconfig getifaddr en0' on your terminal to get your IP
      - REACT_APP_EXPRESS_ENDPOINT_URL=http://host.docker.internal:8080
      - REACT_APP_FLASK_ENDPOINT_URL=http://host.docker.internal:8000
    stdin_open: true
    tty: true

volumes:
  db:
